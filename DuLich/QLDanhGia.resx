<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pic_logo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>